dog_t *new_dog(char *name, float age, char *owner)
{
	dog_t *dog;
	unsigned int i;

	dog = (dog_t *)malloc(sizeof(dog_t));
	/* Allocation mémoire pour une structure dog_t */

	if (dog == NULL)
	{
		return (NULL);
		/* Retourne NULL si l'allocation a échoué */
	}

	dog->name = (char *)malloc(str_len(name) + 1);
	/* Allocation mémoire pour le nom du chien */

	if (dog->name == NULL)
	{
		free(dog);
		/* Libère la mémoire allouée à la structure */
		return (NULL);
		/* Retourne NULL si l'allocation du nom a échoué */
	}
	else
		for (i = 0; i <= str_len(name); i++)
	{
		dog->name[i] = name[i];
	}
	/* Copie chaque caractère du nom dans la structure */


	dog->owner = (char *)malloc(str_len(owner) + 1);
	/* Allocation mémoire pour le nom du propriétaire */

	if (dog->owner == NULL)
	{
		free(dog->name);
		/* Libère la mémoire du nom si l'allocation du owner échoue */
		free(dog);
		/* Libère la structure */
		return (NULL);
		/* Retourne NULL si l'allocation du owner a échoué */
	}


	for (i = 0; i <= str_len(owner); i++)
	{
		dog->owner[i] = owner[i];
	}
	/* Copie chaque caractère du propriétaire dans la structure */

	dog->age = age;
	/* Assigne l'âge du chien */

	return (dog);
	/* Retourne un pointeur vers la nouvelle structure dog_t */
}